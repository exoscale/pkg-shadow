From: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Date: Fri, 20 Dec 2019 16:45:51 +0100
Subject: _extrausers_toggle

---
 lib/defines.h  | 16 ++++++++++++++++
 src/groupadd.c | 22 ++++++++++++++++++++++
 src/useradd.c  | 23 +++++++++++++++++++++++
 3 files changed, 61 insertions(+)

--- a/lib/defines.h
+++ b/lib/defines.h
@@ -275,6 +275,22 @@ static inline void memzero(void *ptr, si
 #define EXTRAUSERS_SHADOW_FILE "/var/lib/extrausers/shadow"
 #endif
 
+#ifndef EXTRAUSERS_GROUP_FILE
+#define EXTRAUSERS_GROUP_FILE "/var/lib/extrausers/group"
+#endif
+
+#ifndef EXTRAUSERS_SHADOWGROUP_FILE
+#define EXTRAUSERS_SHADOWGROUP_FILE "/var/lib/extrausers/gshadow"
+#endif
+
+#ifndef EXTRAUSERS_SUBUID_FILE
+#define EXTRAUSERS_SUBUID_FILE "/var/lib/extrausers/subuid"
+#endif
+
+#ifndef EXTRAUSERS_SUBGID_FILE
+#define EXTRAUSERS_SUBGID_FILE "/var/lib/extrausers/subgid"
+#endif
+
 #ifndef NULL
 #define NULL ((void *) 0)
 #endif
--- a/src/groupadd.c
+++ b/src/groupadd.c
@@ -84,6 +84,12 @@ static void process_flags (int argc, cha
 static void check_flags (void);
 static void check_perms (void);
 
+#ifndef EXTRAUSERS_OPT
+#define EXTRAUSERS_OPT 100000
+#endif
+
+static bool use_extrausers = false;
+
 /*
  * usage - display usage message and exit
  */
@@ -107,6 +113,7 @@ static /*@noreturn@*/void usage (int sta
 	(void) fputs (_("  -R, --root CHROOT_DIR         directory to chroot into\n"), usageout);
 	(void) fputs (_("  -P, --prefix PREFIX_DI        directory prefix\n"), usageout);
 	(void) fputs (_("  -U, --users USERS             list of user members of this group\n"), usageout);
+	(void) fputs (_("      --extrausers              Use the extra users database\n"), usageout);
 	(void) fputs ("\n", usageout);
 	exit (status);
 }
@@ -385,12 +392,16 @@ static void process_flags (int argc, cha
 		{"root",       required_argument, NULL, 'R'},
 		{"prefix",     required_argument, NULL, 'P'},
 		{"users",      required_argument, NULL, 'U'},
+		{"extrausers", no_argument,       NULL, EXTRAUSERS_OPT},
 		{NULL, 0, NULL, '\0'}
 	};
 
 	while ((c = getopt_long (argc, argv, "fg:hK:op:rR:P:U:",
 		                 long_options, NULL)) != -1) {
 		switch (c) {
+		case EXTRAUSERS_OPT:
+			use_extrausers = true;
+			break;
 		case 'f':
 			/*
 			 * "force" - do nothing, just exit(0), if the
@@ -605,7 +616,18 @@ int main (int argc, char **argv)
 
 	check_perms ();
 
+    if (use_extrausers) {
+		fprintf (stderr, "ENTER EXTRAUSERS_GROUP_FILE");
+        gr_setdbname (EXTRAUSERS_GROUP_FILE);
+		fprintf (stderr, "EXIT EXTRAUSERS_GROUP_FILE");
+    }
+
 #ifdef SHADOWGRP
+    if (use_extrausers) {
+		fprintf (stderr, "ENTER EXTRAUSERS_SHADOWGROUP_FILE");
+        sgr_setdbname (EXTRAUSERS_SHADOWGROUP_FILE);
+		fprintf (stderr, "EXIT EXTRAUSERS_SHADOWGROUP_FILE");
+    }
 	is_shadow_grp = sgr_file_present ();
 #endif
 
--- a/src/useradd.c
+++ b/src/useradd.c
@@ -132,6 +132,12 @@ static bool do_grp_update = false;	/* gr
 
 extern int allow_bad_names;
 
+#ifndef EXTRAUSERS_OPT
+#define EXTRAUSERS_OPT 100000
+#endif
+
+static bool use_extrausers = false;
+
 static bool
     bflg = false,		/* new default root of home directory */
     cflg = false,		/* comment (GECOS) field for new account */
@@ -941,6 +947,7 @@ static void usage (int status)
 #ifdef WITH_SELINUX
 	(void) fputs (_("  -Z, --selinux-user SEUSER     use a specific SEUSER for the SELinux user mapping\n"), usageout);
 #endif				/* WITH_SELINUX */
+	(void) fputs (_("      --extrausers              Use the extra users database\n"), usageout);
 	(void) fputs ("\n", usageout);
 	exit (status);
 }
@@ -1224,6 +1231,7 @@ static void process_flags (int argc, cha
 #ifdef WITH_SELINUX
 			{"selinux-user",   required_argument, NULL, 'Z'},
 #endif				/* WITH_SELINUX */
+			{"extrausers",     no_argument,       NULL, EXTRAUSERS_OPT},
 			{NULL, 0, NULL, '\0'}
 		};
 		while ((c = getopt_long (argc, argv,
@@ -1237,6 +1245,9 @@ static void process_flags (int argc, cha
 					 "",
 		                         long_options, NULL)) != -1) {
 			switch (c) {
+			case EXTRAUSERS_OPT:
+                use_extrausers = true;
+                break;
 			case 'b':
 				if (   ( !VALID (optarg) )
 				    || ( optarg[0] != '/' )) {
@@ -2602,6 +2613,18 @@ int main (int argc, char **argv)
 		}
 	}
 
+    if (use_extrausers) {
+        pw_setdbname (EXTRAUSERS_PASSWD_FILE);
+        spw_setdbname (EXTRAUSERS_SHADOW_FILE);
+        gr_setdbname (EXTRAUSERS_GROUP_FILE);
+        /* TODO expose this information in other tools */
+        sub_uid_setdbname(EXTRAUSERS_SUBUID_FILE);
+        sub_gid_setdbname(EXTRAUSERS_SUBGID_FILE);
+#ifdef SHADOWGRP
+        sgr_setdbname (EXTRAUSERS_SHADOWGROUP_FILE);
+#endif
+    }
+
 	/*
 	 * Do the hard stuff:
 	 * - open the files,
